---
layout: post
title: There are not 30 days in a month
---
This may come as a shock to you, but there are *not* 30 days in a month.  And the next time you see any code that assumes otherwise, throw it out and rewrite it!  The problem stems from different months having different days in them.
You're probably getting bored so I'll get to the point: Any code that assumes there are 30 days in a month is not "good enough", no, in fact that is such a horrible assumption as to make that code positively broken.

It might be "good enough" if you're just going to add 30 days to some other number of days to roughly approximate "1 month". Here is some actual code using Rails' wonderfully broken helpers:
{% highlight ruby %}
   distance = Time.now - some_time_in_past
   months = (distance / 1.month).to_i
   "#{months / 12}y  #{"#{months % 12}m"}"
{% endhighlight %}

The goal of this code is to take some date in the past and return a string that tells you how many years and how many months ago it was.  Looks simple enough.  Take a distance of time and just divide it by however long a month is, right?  You better have some bread with you, because this is the start of a crazy rabbit hole.

The problem is that in Rails (since about forever ago) "1.month" has been defined as "30.days".  This number is never useful in code.  If you have a distance in the above code that is say, 30 years, that code will be off by more than 6 months!  Thats how much of an error there is in this assumption.  In fact it takes only a 6 year timespan for the error to get bigger than one whole month.

It turns out that trying to figure out exactly how many months are in a timespan is a kind of annoying problem to solve in code.  In this case, a month will have passed when the day of the month of the first date is today.  So "1 month" from February 7th, would be March 7th (which is 29 days in a leap year, but 28 otherwise).  Things are complicated by the fact that you don't know which months are in the timespan you're working with.

So to start with, the whole idea of 30 days in a month needs to be thrown out a 3rd story window (with cinderblocks).  In a non-leap year, a month has 30.4167 days, and 30.5 days in a leap year.  If you're checking a distance longer than 1 year, it'd probably be better to use the overall mean which is 30.436875 days in it.  As an aside, the average year has 365.2425 days in it, not 365.25 days as Rails assumes.